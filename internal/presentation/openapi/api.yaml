openapi: 3.0.3
info:
  title: kageyamountain.net API
  description: API documentation for kageyamountain.net
  version: 1.0.0
  contact:
    name: kageyamountain
servers: &servers
  - url: http://localhost:8080
    description: development server
paths:
  /articles:
    servers: *servers
    get:
      summary: 記事一覧情報取得API
      description: 記事一覧の情報を取得する
      operationId: articlesGet
      tags:
        - articles
      parameters:
        - name: publish-year
          in: query
          description: 公開年でフィルタリング
          schema:
            type: integer
            example: 2024
        - name: tags
          in: query
          description: |
            タグでフィルタリング（複数指定可能）
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
            example: ["Go", "JavaScript", "AWS"]
      responses:
        '200':
          description: 成功
          headers:
            X-Request-ID:
              $ref: '#/components/headers/RequestID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesGetResponseBody'
        '500':
          description: サーバーエラー
          headers:
            X-Request-ID:
              $ref: '#/components/headers/RequestID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /articles/{article-id}:
    servers: *servers
    get:
      summary: 記事情報取得API
      description: 記事IDを指定して単一記事の詳細情報を取得する
      operationId: articleGet
      tags:
        - article
      parameters:
        - name: article-id
          in: path
          required: true
          description: 記事ID（ハイフン無しのUUIDv4形式）
          schema:
            type: string
          example: "123e4567e89b12d3a456426655440000"
      responses:
        '200':
          description: 成功
          headers:
            X-Request-ID:
              $ref: '#/components/headers/RequestID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticleGetResponseBody'
        '404':
          description: 指定IDの記事が存在しない場合
          headers:
            X-Request-ID:
              $ref: '#/components/headers/RequestID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: サーバーエラー
          headers:
            X-Request-ID:
              $ref: '#/components/headers/RequestID'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  headers:
    RequestID:
      description: リクエストID
      schema:
        $ref: '#/components/schemas/RequestID'

  schemas:
    RequestID:
      type: string
      description: リクエストID（UUIDv4形式）
      example: "123e4567-e89b-12d3-a456-426614174000"

    # APIレスポンス
    ArticlesGetResponseBody:
      type: object
      required:
        - articles
      properties:
        articles:
          type: array
          items:
            $ref: '#/components/schemas/ArticleSummary'
    ArticleGetResponseBody:
      type: object
      required:
        - article
      properties:
        article:
          $ref: '#/components/schemas/ArticleDetail'

    # Article
    ArticleSummary:
      type: object
      required:
        - id
        - published_at
        - title
        - tags
      properties:
        id:
          $ref: '#/components/schemas/ArticleId'
        published_at:
          $ref: '#/components/schemas/ArticlePublishedAt'
        title:
          $ref: '#/components/schemas/ArticleTitle'
        tags:
          $ref: '#/components/schemas/ArticleTags'
    ArticleDetail:
      type: object
      required:
        - id
        - published_at
        - updated_at
        - title
        - contents
        - tags
      properties:
        id:
          $ref: '#/components/schemas/ArticleId'
        published_at:
          $ref: '#/components/schemas/ArticlePublishedAt'
        updated_at:
          $ref: '#/components/schemas/ArticleUpdatedAt'
        title:
          $ref: '#/components/schemas/ArticleTitle'
        contents:
          $ref: '#/components/schemas/ArticleContents'
        tags:
          $ref: '#/components/schemas/ArticleTags'

    # Articleプロパティ
    ArticleId:
      type: string
      description: 記事ID（ハイフン無しのUUIDv4形式）
      example: "123e4567e89b12d3a456426655440000"
    ArticleTitle:
      type: string
      description: 記事タイトル
      example: "Go言語入門"
    ArticleContents:
      type: string
      description: 記事内容（マークダウン形式）
      example: |
        # 入門チャプター
        - 標準出力
        - 変数と定数
        - 条件分岐
        - ループ
    ArticlePublishedAt:
      type: string
      format: date-time
      description: 公開日時（UTC）
      example: "2025-01-15T12:00:00Z"
    ArticleUpdatedAt:
      type: string
      format: date-time
      description: 更新日時（UTC）
      example: "2025-01-15T12:00:00Z"
    ArticleTags:
      type: array
      items:
        type: string
      description: タグ
      example: [ "Go", "JavaScript", "AWS" ]

    # エラー定義
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
          description: エラーメッセージ
          example: "internal server error"
        details:
          type: object
          description: エラーの詳細情報
          additionalProperties:
            type: string
          example:
            {
              "code": "internal_server_error",
              "message": "internal server error",
              "detail": "server is busy",
            }

    ErrorCode:
      description: エラーコード
      type: string
      enum:
        - internal_server_error
        - not_found
