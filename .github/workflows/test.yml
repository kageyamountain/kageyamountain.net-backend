# DynamoDBの起動やテスト実行の動作を制御するワークフロー
# - ローカル環境でactを利用する場合は、事前に開発用DynamoDBを起動しておくこと
# - 当ワークフロー内で起動するDynamoDBサービスはCI環境でのみ利用する
# - Windows環境でactからサービス名で名前解決できないための対応
name: test

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main
      - develop

jobs:
  test:
    name: test
    runs-on: ubuntu-latest

    services:
      dynamodb:
        image: amazon/dynamodb-local:latest
        ports:
          - 7999:8000

    steps:
      - name: リポジトリのチェックアウト
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Goのセットアップ
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version-file: ./go.mod
          cache: true

      - name: 依存関係のダウンロード
        run: go mod download

      - name: DynamoDBの起動待機
        run: | # CI環境では疎通確認（レスポンスのステータスは問わない）
          if [ -n "$ACT" ]; then
            echo "act mode..."
          else
            until curl -s http://localhost:7999/ > /dev/null
            do
              echo "Waiting for DynamoDB startup..."
              sleep 2
            done
          fi

      - name: テスト実行
        run: | # CI環境では環境変数"ENV=ci"を設定
          if [ -n "$ACT" ]; then
            go test -race ./...
          else
            env ENV=ci go test -race ./...
          fi
